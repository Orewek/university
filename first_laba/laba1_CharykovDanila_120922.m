%Charykov Danila #25

%{
3
Подставляем случайные значения, как числа, так и pi
Получившиеся значение всегда будет = 1 
%}
sin(pi / 7) ^ 2 + cos(pi / 7) ^ 2;
sin(pi / 182) ^ 2 + cos(pi / 182) ^ 2;
sin(22) ^ 2 + cos(22) ^ 2;

%{
4
Просто переписываем входящие данные и формулу
%}
x = 2.5; b = 0.04; k = 3; n = 5;

y = 1/9 - 10 ^ -4 * (exp(k * x)) + cos(sqrt(x ^ 2 + b)) + (sqrt(x ^ 2 + b) / (0.4 * x)) + (sin(3) / ((x ^ 2 + b) * n));

%{
5
Используем команду nchoosek для вычисления бинома Ньютона
%}
nchoosek(13, 4);
nchoosek(10, 5);

%{
6
Экспонента и натуральный логарифм обратны друг другу
%}

x = 552;
log(exp(x)) == x;

%{
7
Итерационная формула Герона
Вычисляемый предел с подстановкой числа = квадратному корню числа 
%}

res = 1; number = 555;
for x = 1:10^2
    res = 0.5 * (res + number / res);
end
res == sqrt(555);


%{
8
Ближайшим корнем уравнение являет: x = 3.1238
Проходимся по циклу от 2 до 4 с шагом 10^-6
сначала берем 5000, считаем значениие выражения при х = 3
Оно получилось ближе к 0 чем 5000, записываем его в temp_res
Чтобы считать расстояние до 0 и для отриц. чисел, берем модуль
По итогу в temp_res записывает минимальное расстояние до 0
А в final_x само число x, при котором оно было достигнуто
%}

res = 5000;
for x = 2:+10^-6:4
    temp_res = (0.5 * ((x - 2) ^ 3) - 40 * sin(x));
    if (abs(temp_res) < abs(res))
        res = temp_res;
        final_x = x;
    end
end
final_x;